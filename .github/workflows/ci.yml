# .github/workflows/ci.yml
# DELPHY CI/CD Pipeline Configuration

name: DELPHY CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    name: Environment Setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Required Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libqt4-dev cmake build-essential pkg-config

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          bundler-cache: true

      - name: Install Bundler
        run: |
          gem install bundler -v 1.17.3

      - name: Clean Build Environment
        run: |
          sudo rm -rf vendor/bundle/ruby/2.7.0/gems/qtbindings-4.8.6.5/ext/build

      - name: Install Dependencies
        run: |
          bundle _1.17.3_ install

      - name: Validate Environment
        run: |
          ruby -v
          bundler -v
          qmake --version
          cmake --version

  lint:
    name: Code Linting
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Run RuboCop
        run: |
          bundle exec rubocop

  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Run Unit Tests
        run: |
          bundle exec rspec tests/targets/DELPHY --format documentation

  integration_tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Run Integration Tests
        run: |
          bundle exec rspec tests/targets/DELPHY/integration_test.rb --format documentation

  deployment:
    name: Deployment
    runs-on: ubuntu-latest
    needs: [lint, unit_tests, integration_tests]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Run Deployment Script
        run: |
          chmod +x deploy.sh
          sudo ./deploy.sh

      - name: Validate Deployment Logs
        run: |
          tail -n 50 /opt/cosmos_delphy/config/targets/DELPHY/tools/logs/*.log

  finalize:
    name: Finalization
    runs-on: ubuntu-latest
    needs: deployment

    steps:
      - name: Deployment Success
        run: |
          echo "âœ… Deployment Successful!"
